{"version":3,"file":"static/js/775.f3c657d5.chunk.js","mappings":"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","sources":["Components/NovaCargapopup.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  colors,\n  Select,\n  MenuItem,\n  Fade,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { useTheme } from \"@mui/system\";\nimport { tokens } from \"../theme\";\nimport React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport ShoppingBagSharpIcon from \"@mui/icons-material/ShoppingBagSharp\";\nimport ScaleSharpIcon from \"@mui/icons-material/ScaleSharp\";\nimport AttachMoneySharpIcon from \"@mui/icons-material/AttachMoneySharp\";\nimport AssuredWorkloadSharpIcon from \"@mui/icons-material/AssuredWorkloadSharp\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport { Snackbar } from '@mui/material';\nimport { Alert } from '@mui/material';\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport axiosConfig from \"../axiosConfig\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst apiUrl = \"http://127.0.0.1:8000/contractor/\";\n\nconst NovaCargapopup = () => {\n  const queryClient = useQueryClient();\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [open, openchange] = useState(false);\n  const redirecionar = useNavigate();\n  // OPCOES FORMULARIO\n  const [options, setOptions] = useState([]);\n  const [coptions, setCoptions] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [covalue, setCovalue] = useState(\"\");\n  // MUDANCA DE NOME FILE UPLOADS\n  const [ce_mfilename, setCe_mfile] = useState(\"Adicionar CE_M\");\n  const [blfilename, setBlfile] = useState(\"Adiconar BL\");\n  const [packlistfile, setPackfile] = useState(\"Adicionar PackingList\");\n  const [afrmmfile, setAfrmmfile] = useState(\"Adicionar AFRMM\");\n  const handleCeMfile = (event) => {\n    const filename = event.target.files[0]?.name || \"Adicionar CE_M\";\n    setCe_mfile(filename);\n  };\n  const handleBlfilename = (event) => {\n    const filename = event.target.files[0]?.name || \"Adicionar BL\";\n    setBlfile(filename);\n  };\n  const handlePacklistfile = (event) => {\n    const filename = event.target.files[0]?.name || \"Adicionar PackingList\";\n    setPackfile(filename);\n  };\n  const handleAfrmmfile = (event) => {\n    const filename = event.target.files[0]?.name || \"Adicionar AFRMM\";\n    setAfrmmfile(filename);\n  };\n  //Alerta de sucesso\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertMessage, setAlertmessage] = useState(\"Nova carga registrada\");\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenAlert(false);\n  };\n  const handleFileChange = (event) => {\n    setOpenAlert(true);\n  };\n\n\n  useEffect(() => {\n\n    fetch(\"http://127.0.0.1:8000/contractor/\")\n      .then((response) => response.json())\n      .then((data) => {\n        const contractors = data.results;\n        setOptions(\n          contractors.map((contractor) => ({\n            id: contractor.id,\n            name: contractor.name,\n          })),\n        );\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n\n    fetch(\"http://127.0.0.1:8000/country/\")\n      .then((response) => response.json())\n      .then((data) => {\n        const countries = data.results;\n        setCoptions(\n          countries.map((country) => ({ id: country.id, name: country.name })),\n        );\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  const funcopenchange = () => {\n    openchange(true);\n  };\n\n  const funcclosechange = () => {\n    openchange(false);\n  };\n\n  return (\n    <div>\n      <Button\n        onClick={funcopenchange}\n        sx={{\n          backgroundColor: colors.blueAccent[400],\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n          padding: \"10px 20px\",\n          alignItems: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          color: colors.grey[100],\n        }}\n      >\n        Nova carga\n      </Button>\n      <Dialog\n        open={open}\n        fullWidth\n        onClose={funcclosechange}\n        sx={colors.primary[500]}\n        PaperProps={{\n          component: \"form\",\n          onSubmit: async (event) => {\n            event.preventDefault();\n            const formData = new FormData(event.currentTarget);\n            const formJson = Object.fromEntries(formData.entries());\n            formData.append('data', JSON.stringify(formJson));\n            console.log(formData); //CHECAR ANTES DE PRODUCAO\n            try {\n              const response = await axiosConfig.post('/cargasinfo/', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                },\n              });\n              console.log(response);\n              setAlertmessage(\"Nova carga adicionada!\");\n              setOpenAlert(true);\n              funcclosechange();\n              handleFileChange(); // Close the dialog if the request was successful\n              queryClient.invalidateQueries('cargasinfo');\n            } catch (error) {\n              console.error(error);\n              setAlertmessage(\"Erro ao registrar nova carga\");\n              setOpenAlert(true);\n            }\n          },\n        }}\n      >\n        <DialogTitle variant=\"h3\" fontWeight=\"Bold\" color={colors.grey[200]}>\n          Registrar nova carga\n        </DialogTitle>\n        <DialogContent>\n          <Box marginTop=\"15px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"contractorname\">Cliente</InputLabel>\n              <Select\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                value={value}\n                label=\"Contratante\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <AccountCircleIcon\n                      sx={{ color: colors.grey[400] }}\n                    />\n                  </InputAdornment>\n                }\n                onChange={(event) => setValue(event.target.value)}\n                name=\"contractorname\"\n              >\n                {options.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"type_of_load\">Tipo de Carga</InputLabel>\n              <OutlinedInput\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                id=\"type_of_load\"\n                name=\"type_of_load\"\n                placeholder=\"Tipo de carga\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <ShoppingBagSharpIcon\n                      sx={{ color: colors.grey[400] }}\n                    />\n                  </InputAdornment>\n                }\n                label=\"Tipo de Carga\"\n              />\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"origin\">Origem</InputLabel>\n              <Select\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                value={covalue}\n                label=\"Origem\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <PublicIcon sx={{ color: colors.grey[300] }} />\n                  </InputAdornment>\n                }\n                onChange={(event) => setCovalue(event.target.value)}\n                name=\"origin\"\n              >\n                {coptions.map((coption) => (\n                  <MenuItem key={coption.id} value={coption.id}>\n                    {coption.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"weight\">Peso</InputLabel>\n              <OutlinedInput\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                id=\"weight\"\n                name=\"weight\"\n                placeholder=\"Kg\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <ScaleSharpIcon sx={{ color: colors.grey[300] }} />\n                  </InputAdornment>\n                }\n                label=\"Peso\"\n              />\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"cost\">Custo</InputLabel>\n              <OutlinedInput\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                id=\"cost\"\n                name=\"cost\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <AttachMoneySharpIcon\n                      sx={{ color: colors.grey[300] }}\n                    />\n                  </InputAdornment>\n                }\n                label=\"Custo\"\n              />\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"ce_mercante\">CE MERCANTE</InputLabel>\n              <OutlinedInput\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderRadius: \"4px\",\n                  borderWidth: \"1px\",\n                  borderColor: colors.grey[400],\n                }}\n                id=\"ce_mercante\"\n                name=\"ce_mercante\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <AssuredWorkloadSharpIcon\n                      sx={{ color: colors.grey[300] }}\n                    />\n                  </InputAdornment>\n                }\n                label=\"CE MERCANTE\"\n              />\n            </FormControl>\n          </Box>\n          <Box marginTop={\"25px\"}display=\"flex\">\n            <FormControl fullWidth>\n              <Button\n                variant=\"outlined\"\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderColor: colors.grey[500],\n                }}\n                component=\"label\"\n              >\n                {blfilename}\n                <input\n                  type=\"file\"\n                  name=\"blfile\"\n                  hidden\n                  onChange={handleBlfilename}\n                />\n              </Button>\n            </FormControl>\n            <FormControl fullWidth>\n              <Button\n                variant=\"outlined\"\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderColor: colors.grey[500],\n                }}\n                component=\"label\"\n              >\n                {ce_mfilename}\n                <input\n                  type=\"file\"\n                  name=\"ce_m_file\"\n                  hidden\n                  onChange={handleCeMfile}\n                />\n              </Button>\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <Button\n                variant=\"outlined\"\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderColor: colors.grey[500],\n                }}\n                component=\"label\"\n              >\n                {packlistfile}\n                <input\n                  type=\"file\"\n                  name=\"packinglist\"\n                  hidden\n                  onChange={handlePacklistfile}\n                />\n              </Button>\n            </FormControl>\n          </Box>\n          <Box marginTop=\"25px\">\n            <FormControl fullWidth>\n              <Button\n                variant=\"outlined\"\n                style={{\n                  height: 50,\n                  backgroundColor: colors.blueAccent[900],\n                  color: colors.grey[300],\n                  borderColor: colors.grey[500],\n                }}\n                component=\"label\"\n              >\n                {afrmmfile}\n                <input\n                  type=\"file\"\n                  name=\"afrmmfile\"\n                  hidden\n                  onChange={handleAfrmmfile}\n                />\n              </Button>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={funcclosechange}\n            sx={{ color: colors.grey[200] }}\n          >\n            Cancelar\n          </Button>\n          <Button type=\"submit\" sx={{ color: colors.grey[200] }}>\n            Cadastrar\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar \n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={openAlert} \n        autoHideDuration={3000}\n        onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity=\"success\">\n          {alertMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default NovaCargapopup;\n"],"names":["NovaCargapopup","queryClient","useQueryClient","theme","useTheme","colors","tokens","palette","mode","open","openchange","useState","options","setOptions","useNavigate","coptions","setCoptions","value","setValue","covalue","setCovalue","ce_mfilename","setCe_mfile","blfilename","setBlfile","packlistfile","setPackfile","afrmmfile","setAfrmmfile","openAlert","setOpenAlert","alertMessage","setAlertmessage","handleSnackbarClose","event","reason","useEffect","fetch","then","response","json","data","contractors","results","map","contractor","id","name","catch","error","console","countries","country","funcclosechange","_jsxs","children","_jsx","Button","onClick","funcopenchange","sx","backgroundColor","blueAccent","fontSize","fontWeight","padding","alignItems","display","justifyContent","color","grey","Dialog","fullWidth","onClose","primary","PaperProps","component","onSubmit","async","preventDefault","formData","FormData","currentTarget","formJson","Object","fromEntries","entries","append","JSON","stringify","log","axiosConfig","post","headers","invalidateQueries","DialogTitle","variant","DialogContent","Box","marginTop","FormControl","InputLabel","htmlFor","Select","style","height","borderRadius","borderWidth","borderColor","label","startAdornment","InputAdornment","position","AccountCircleIcon","onChange","target","option","MenuItem","OutlinedInput","placeholder","ShoppingBagSharpIcon","PublicIcon","coption","ScaleSharpIcon","AttachMoneySharpIcon","AssuredWorkloadSharpIcon","type","hidden","_event$target$files$2","filename","files","_event$target$files$","_event$target$files$3","_event$target$files$4","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity"],"sourceRoot":""}